// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(FileStorageContext))]
    [Migration("20220709095614_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Entities.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("FileCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("FileStreamCol")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("FileTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileTypeId");

                    b.ToTable("File");
                });

            modelBuilder.Entity("DAL.Entities.FileSecureLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SecureLevelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("FileSecureLevel");
                });

            modelBuilder.Entity("DAL.Entities.FileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("FileType");
                });

            modelBuilder.Entity("DAL.Entities.FullFileInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FileId")
                        .HasColumnType("int");

                    b.Property<int?>("FileSecureLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("FileSecureLevelId");

                    b.HasIndex("UserId");

                    b.ToTable("FullFileInfo");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DAL.Entities.File", b =>
                {
                    b.HasOne("DAL.Entities.FileType", "FileType")
                        .WithMany("File")
                        .HasForeignKey("FileTypeId");

                    b.Navigation("FileType");
                });

            modelBuilder.Entity("DAL.Entities.FullFileInfo", b =>
                {
                    b.HasOne("DAL.Entities.File", "File")
                        .WithMany("FullFileInfo")
                        .HasForeignKey("FileId");

                    b.HasOne("DAL.Entities.FileSecureLevel", "FileSecureLevel")
                        .WithMany("FullFileInfo")
                        .HasForeignKey("FileSecureLevelId");

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("FullFileInfo")
                        .HasForeignKey("UserId");

                    b.Navigation("File");

                    b.Navigation("FileSecureLevel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.File", b =>
                {
                    b.Navigation("FullFileInfo");
                });

            modelBuilder.Entity("DAL.Entities.FileSecureLevel", b =>
                {
                    b.Navigation("FullFileInfo");
                });

            modelBuilder.Entity("DAL.Entities.FileType", b =>
                {
                    b.Navigation("File");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Navigation("FullFileInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
